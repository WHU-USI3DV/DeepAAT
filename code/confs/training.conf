exp_name = Learning_Euc
# random_seed=0
dataset
{
    batch_size = 1
    shuffle_data = True    # if true, then shuffle rows for each data
    trainset_path = /home/zeeq/data/trainset/npzs100-130    # Change to your own path
    valset_path = /home/zeeq/data/valset/npzs100-130
    testset_path = /home/zeeq/data/valset/npzs100-130
    results_path = /home/zeeq/results/val10
    use_spatial_encoder = True
    gps_embed_width = 128
    egps_embed_rank = 4
    x_embed_rank = 4
    dsc_egps_embed_width = 32    # 0 means not embed
    addNoise = True
    noise_mean = 0
    noise_std = 0.01
    noise_radio = 1.0
    alpha = 0.9        # rot
    beta = 0.1         # trans
}
model
{
    type = SetOfSet.SetOfSetNet
    num_features = 256
    num_blocks = 3
    block_size = 2
    use_skip = True

    multires = 10    # discard
}
train
{
    lr = 1e-3
    num_of_epochs = 50
    eval_intervals = 1000
    train_trans = True
    save_predictions = False

    scheduler_milestone = [12000,16000,18000]    #[20000, 30000, 40000, 45000]    # 20000
    gamma = 0.2
    optimization_num_of_epochs = 500
    optimization_eval_intervals = 250
    optimization_lr = 1e-3
    min_valid_pts = 100       # if any one camera in data batch watch points less than this, it will be skipped
}
loss
{
    func = GTLoss
    mask_thred = 0.5

    infinity_pts_margin = 1e-4
    normalize_grad = True
    hinge_loss = True
    hinge_loss_weight = 1
}
ba
{
    run_ba = False
    repeat=True    #  If repeat, the first time is from our points and the second from triangulation
    triangulation=True
    only_last_eval = True
    refined = False       # multi-ba
    max_iter = 50
    ba_times = 2
    repro_thre = 2
}